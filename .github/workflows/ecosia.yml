# name: Production
# on:
#   push:
#     branches:
#     - master

# env:
#   GIT_SHA: ${{ github.sha }}
#   GIT_REF: ${{ github.ref }}
#   # GIT_PAT: ${{ secrets.GIT_PAT }}


# jobs: 
#  build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:

#     - name: Checkout the repository
#       uses: actions/checkout@master

#     - name: Prescript 
#       run: |
#         apk add --no-cache groff less bash jq curl py-pip tzdata
#         pip install awscli

#     - name: Push to repository
#       run: |
#         $(aws ecr get-login --no-include-email --region us-east-2)
#         docker build -t 265311748595.dkr.ecr.us-west-2.amazonaws.com/ecosia:$GIT_SHA .
#         docker push 265311748595.dkr.ecr.us-east-2.amazonaws.com/fmscapproval:$GIT_SHA


name: Build and Push Ecosia pipeline Image to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./build/git_update.sh -v major
    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 265311748595.dkr.ecr.us-west-2.amazonaws.com
        ECR_REPOSITORY: ecosia
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG